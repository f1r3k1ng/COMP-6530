---

- name: Change root user password
  user:
    name: root
    password: "{{ password | password_hash('sha512') }}"
    state: present 
  when: user_update | bool 

- name: Update root user .bashrc file
  copy:
    src: bashrc
    dest: /root/.bashrc
    owner: root
  when: bashrc_update | bool

- name: Change ubuntu user password
  user:
    name: ubuntu
    password: "{{ password | password_hash('sha512') }}"
    state: present
  when: user_update | bool

- name: Update ubuntu user .bashrc file
  copy:
    src: bashrc
    dest: /home/ubuntu/.bashrc
    owner: ubuntu
  when: bashrc_update | bool

- name: Add user {{ username }}
  user:
    name: "{{ username }}"
    shell: /bin/bash
    group: sudo
    password: "{{ password | password_hash('sha512') }}"
    state: present 
  when: user_update | bool

- name: Update {{ username }} user .bashrc file
  copy:
    src: bashrc
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
  when: bashrc_update | bool

- name: Set correct timezone
  timezone:
    name: America/Chicago
    hwclock: local

- name: Update the sshd config
  copy:
    src: sshd_config
    dest: /etc/ssh/sshd_config
  when: sshd_update | bool

- name: Restarting sshd
  service:
    name: sshd
    state: restarted
  when: sshd_update | bool

- name: Flush iptables
  iptables:
    flush: yes
  when: machine == "management" and iptables_flush | bool

- name: Setup forwarding in iptables
  iptables:
    chain: FORWARD
    in_interface: ens4
    out_interface: ens3
    match: state
    ctstate: RELATED,ESTABLISHED
    jump: ACCEPT
  when: machine == "management" and iptables_setup | bool

- name: Setup nat in iptables
  iptables:
    table: nat
    chain: POSTROUTING
    out_interface: ens4
    jump: MASQUERADE
  when: machine == "management" and iptables_setup | bool

- name: Enabling packet forwarding
  copy:
    src: ip_forward
    dest: /proc/sys/net/ipv4/ip_forward
  when: machine  == "management" and iptables_setup | bool

- name: Create a bridge
  shell: brctl addbr br0
  when: machine != "management" and bridge_setup | bool
  ignore_errors: yes

- name: Create veth pairs
  shell: ip link add veth0 type veth peer name veth1
  when: machine != "management" and machine != "storage" and bridge_setup | bool
  ignore_errors: yes

- name: Configure mtu for interfaces
  shell: ifconfig veth0 mtu 1400 && ifconfig veth1 mtu 1400 && ifconfig br0 mtu 1400
  when: machine != "management" and machine != "storage" and bridge_setup | bool

- name: Configure mtu for bridge interface
  shell: ifconfig br0 mtu 1400
  when: machine == "storage"

- name: Set bridge ip
  shell: ifconfig br0 "{{ machine_internal_ip }}" 
  when: machine != "management" and machine != "storage"
  ignore_errors: yes

- name: Add interface to bridge
  shell: brctl addif br0 ens3
  when: machine != "management" and machine != "storage"
  ignore_errors: yes

- name: Add veth interface to bridge
  shell: brctl addif br0 veth0  
  when: machine != "management" and machine != "storage"
  ignore_errors: yes

- name: Flush interface ip
  shell: ip addr flush ens3
  when: machine != "management" and machine != "storage"
  ignore_errors: yes
...

